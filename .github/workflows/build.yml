name: CI

on: [push, pull_request]

jobs:
  pre_job:
    # continue-on-error: true # Uncomment once integration is finished
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          # All of these options are optional, so you can remove them if you are happy with the defaults
          concurrent_skipping: 'same_content_newer'
          skip_after_successful_duplicate: 'false'

  native:
    name: build
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true'
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
      - name: Setup CMake
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: "~3.26.2"
          ninjaVersion: "~1.12.0"

      - name: Set Env
        uses: TheMrMilchmann/setup-msvc-dev@v3.0.1
        with:
            arch: x64
            toolset: 14.42


      - name: Compile
        run: |
           cmake --preset build-release-withdebuginfo-msvc
           cmake --build build --config RelWithDebInfo
            
      - name: Copy Plugin
        shell: bash
        run: |
          mkdir contrib/Distribution/Plugin || exit 1
          shopt -s nullglob
          root_folder=""
          if [ -d contrib/Distribution/PluginRelease ]; then
            root_folder=contrib/Distribution/PluginRelease
          elif [ -d contrib/Distribution/PluginDebug ]; then
            root_folder=contrib/Distribution/PluginDebug
          fi
          if [ -n "${root_folder}" ]; then
            cp "${root_folder}"/*.dll contrib/Distribution/Plugin/
            cp "${root_folder}"/*.pdb contrib/Distribution/Plugin/
            ls -la "${root_folder}"/
            ls -la "${root_folder}"/*.pdb
            pdbs=( "${root_folder}"/*.pdb )
            if [ "${#pdbs[@]}" -gt 0 ]; then
              cp "${pdbs[@]}" contrib/
            fi
          fi
          if [ -d contrib/Distribution/PluginRelease ]; then
            rm -rf "contrib/Distribution/PluginRelease"
          elif [ -d contrib/Distribution/PluginDebug ]; then
            rm -rf "contrib/Distribution/PluginDebug"
          fi
          shopt -u nullglob
      - uses: actions/upload-artifact@v4
        name: Upload package
        with:
          name: GTSPlugin
          path: "contrib/Distribution/*"
      - uses: actions/upload-artifact@v4
        name: Upload debug info
        with:
          name: GTSPluginDebugInfo
          path: "contrib/*.pdb"
      - uses: actions/upload-artifact@v4
        name: Update compile_commands.json
        with:
          name: "Compiled File Data"
          path: "compile_commands.json"
